{"version":3,"sources":["../ofi.js"],"names":["objectFitImages","createPlaceholder","w","h","polyfillCurrentSrc","el","srcset","supportsCurrentSrc","window","picturefill","pf","_","ns","evaled","fillImg","reselect","curSrc","supported","currentSrc","src","getStyle","style","getComputedStyle","fontFamily","parsed","props","propRegex","exec","setPlaceholder","img","width","height","placeholder","nativeGetAttribute","call","nativeSetAttribute","onImageReady","callback","naturalWidth","setTimeout","fixOne","ofi","OFI","skipTest","supportsObjectFit","Image","naturalHeight","keepSrcUsable","err","console","warn","backgroundImage","replace","backgroundPosition","backgroundRepeat","backgroundOrigin","test","backgroundSize","descriptors","get","prop","set","value","Object","defineProperty","ss","hijackAttributes","getOfiImageMaybe","name","supportsObjectPosition","HTMLImageElement","prototype","getAttribute","this","setAttribute","String","fix","imgs","opts","startAutoMode","autoModeEnabled","supportsOFI","document","getElementsByTagName","querySelectorAll","i","length","body","addEventListener","e","target","tagName","watchMQ","bind","testImg","object-position"],"mappings":"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","file":"ofi.min.js","sourcesContent":["/*! npm.im/object-fit-images 3.2.3 */\nvar objectFitImages = (function() {\n  'use strict';\n\n  var OFI = 'bfred-it:object-fit-images';\n  var propRegex = /(object-fit|object-position)\\s*:\\s*([-\\w\\s%]+)/g;\n  var testImg = typeof Image === 'undefined' ? { style: { 'object-position': 1 } } : new Image();\n  var supportsObjectFit = 'object-fit' in testImg.style;\n  var supportsObjectPosition = 'object-position' in testImg.style;\n  var supportsOFI = 'background-size' in testImg.style;\n  var supportsCurrentSrc = typeof testImg.currentSrc === 'string';\n  var nativeGetAttribute = testImg.getAttribute;\n  var nativeSetAttribute = testImg.setAttribute;\n  var autoModeEnabled = false;\n\n  function createPlaceholder(w, h) {\n    return (\n      \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='\" + w + \"' height='\" + h + \"'%3E%3C/svg%3E\"\n    );\n  }\n\n  function polyfillCurrentSrc(el) {\n    if (el.srcset && !supportsCurrentSrc && window.picturefill) {\n      var pf = window.picturefill._;\n      // parse srcset with picturefill where currentSrc isn't available\n      if (!el[pf.ns] || !el[pf.ns].evaled) {\n        // force synchronous srcset parsing\n        pf.fillImg(el, { reselect: true });\n      }\n\n      if (!el[pf.ns].curSrc) {\n        // force picturefill to parse srcset\n        el[pf.ns].supported = false;\n        pf.fillImg(el, { reselect: true });\n      }\n\n      // retrieve parsed currentSrc, if any\n      el.currentSrc = el[pf.ns].curSrc || el.src;\n    }\n  }\n\n  function getStyle(el) {\n    var style = getComputedStyle(el).fontFamily;\n    var parsed;\n    var props = {};\n    while ((parsed = propRegex.exec(style)) !== null) {\n      props[parsed[1]] = parsed[2];\n    }\n    return props;\n  }\n\n  function setPlaceholder(img, width, height) {\n    // Default: fill width, no height\n    var placeholder = createPlaceholder(width || 1, height || 0);\n\n    // Only set placeholder if it's different\n    if (nativeGetAttribute.call(img, 'src') !== placeholder) {\n      nativeSetAttribute.call(img, 'src', placeholder);\n    }\n  }\n\n  function onImageReady(img, callback) {\n    // naturalWidth is only available when the image headers are loaded,\n    // this loop will poll it every 100ms.\n    if (img.naturalWidth) {\n      callback(img);\n    } else {\n      setTimeout(onImageReady, 100, img, callback);\n    }\n  }\n\n  function fixOne(el) {\n    var style = getStyle(el);\n    var ofi = el[OFI];\n    style['object-fit'] = style['object-fit'] || 'fill';\n    // default value\n    // Avoid running where unnecessary, unless OFI had already done its deed\n    if (!ofi.img) {\n      // fill is the default behavior so no action is necessary\n      if (style['object-fit'] === 'fill') {\n        return;\n      }\n\n      // Where object-fit is supported and object-position isn't (Safari < 10)\n      if (\n        // unless object-position is used\n        !ofi.skipTest &&\n        // unless user wants to apply regardless of browser support\n        supportsObjectFit &&\n        // if browser already supports object-fit\n        !style['object-position']\n      ) {\n        return;\n      }\n    }\n\n    // keep a clone in memory while resetting the original to a blank\n    if (!ofi.img) {\n      ofi.img = new Image(el.width, el.height);\n      ofi.img.srcset = nativeGetAttribute.call(el, 'data-ofi-srcset') || el.srcset;\n      ofi.img.src = nativeGetAttribute.call(el, 'data-ofi-src') || el.src;\n\n      // preserve for any future cloneNode calls\n      // https://github.com/bfred-it/object-fit-images/issues/53\n      nativeSetAttribute.call(el, 'data-ofi-src', el.src);\n      if (el.srcset) {\n        nativeSetAttribute.call(el, 'data-ofi-srcset', el.srcset);\n      }\n\n      setPlaceholder(el, el.naturalWidth || el.width, el.naturalHeight || el.height);\n\n      // remove srcset because it overrides src\n      if (el.srcset) {\n        el.srcset = '';\n      }\n      try {\n        keepSrcUsable(el);\n      } catch (err) {\n        if (window.console) {\n          console.warn('https://bit.ly/ofi-old-browser');\n        }\n      }\n    }\n\n    polyfillCurrentSrc(ofi.img);\n\n    el.style.backgroundImage = 'url(\"' + (ofi.img.currentSrc || ofi.img.src).replace(/\"/g, '\\\\\"') + '\")';\n    el.style.backgroundPosition = style['object-position'] || 'center';\n    el.style.backgroundRepeat = 'no-repeat';\n    el.style.backgroundOrigin = 'content-box';\n\n    if (/scale-down/.test(style['object-fit'])) {\n      onImageReady(ofi.img, function() {\n        if (ofi.img.naturalWidth > el.width || ofi.img.naturalHeight > el.height) {\n          el.style.backgroundSize = 'contain';\n        } else {\n          el.style.backgroundSize = 'auto';\n        }\n      });\n    } else {\n      el.style.backgroundSize = style['object-fit'].replace('none', 'auto').replace('fill', '100% 100%');\n    }\n\n    onImageReady(ofi.img, function(img) {\n      setPlaceholder(el, img.naturalWidth, img.naturalHeight);\n    });\n  }\n\n  function keepSrcUsable(el) {\n    var descriptors = {\n      get: function get(prop) {\n        return el[OFI].img[prop ? prop : 'src'];\n      },\n      set: function set(value, prop) {\n        el[OFI].img[prop ? prop : 'src'] = value;\n        nativeSetAttribute.call(el, 'data-ofi-' + prop, value);\n        // preserve for any future cloneNode\n        fixOne(el);\n        return value;\n      }\n    };\n    Object.defineProperty(el, 'src', descriptors);\n    Object.defineProperty(el, 'currentSrc', {\n      get: function() {\n        return descriptors.get('currentSrc');\n      }\n    });\n    Object.defineProperty(el, 'srcset', {\n      get: function() {\n        return descriptors.get('srcset');\n      },\n      set: function(ss) {\n        return descriptors.set(ss, 'srcset');\n      }\n    });\n  }\n\n  function hijackAttributes() {\n    function getOfiImageMaybe(el, name) {\n      return el[OFI] && el[OFI].img && (name === 'src' || name === 'srcset') ? el[OFI].img : el;\n    }\n    if (!supportsObjectPosition) {\n      HTMLImageElement.prototype.getAttribute = function(name) {\n        return nativeGetAttribute.call(getOfiImageMaybe(this, name), name);\n      };\n\n      HTMLImageElement.prototype.setAttribute = function(name, value) {\n        return nativeSetAttribute.call(getOfiImageMaybe(this, name), name, String(value));\n      };\n    }\n  }\n\n  function fix(imgs, opts) {\n    var startAutoMode = !autoModeEnabled && !imgs;\n    opts = opts || {};\n    imgs = imgs || 'img';\n\n    if ((supportsObjectPosition && !opts.skipTest) || !supportsOFI) {\n      return false;\n    }\n\n    // use imgs as a selector or just select all images\n    if (imgs === 'img') {\n      imgs = document.getElementsByTagName('img');\n    } else if (typeof imgs === 'string') {\n      imgs = document.querySelectorAll(imgs);\n    } else if (!('length' in imgs)) {\n      imgs = [imgs];\n    }\n\n    // apply fix to all\n    for (var i = 0; i < imgs.length; i++) {\n      imgs[i][OFI] = imgs[i][OFI] || { skipTest: opts.skipTest };\n      fixOne(imgs[i]);\n    }\n\n    if (startAutoMode) {\n      document.body.addEventListener(\n        'load',\n        function(e) {\n          if (e.target.tagName === 'IMG') {\n            fix(e.target, { skipTest: opts.skipTest });\n          }\n        },\n        true\n      );\n      autoModeEnabled = true;\n      imgs = 'img'; // reset to a generic selector for watchMQ\n    }\n\n    // if requested, watch media queries for object-fit change\n    if (opts.watchMQ) {\n      window.addEventListener('resize', fix.bind(null, imgs, { skipTest: opts.skipTest }));\n    }\n  }\n\n  fix.supportsObjectFit = supportsObjectFit;\n  fix.supportsObjectPosition = supportsObjectPosition;\n\n  hijackAttributes();\n\n  return fix;\n})();\n"]}